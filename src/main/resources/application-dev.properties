# Development-specific properties for book_recommendation_engine
# Focused on minimizing Google Books API calls

# Logging configuration for development
logging.level.root=INFO
logging.level.com.williamcallahan=DEBUG
logging.level.com.williamcallahan.book_recommendation_engine.service=DEBUG

# Google Books API throttling for development
google.books.api.cache.enabled=true
google.books.api.cache.ttl-minutes=1440
google.books.api.request-limit-per-minute=5
google.books.api.prefer-cache=true
google.books.api.mock-enabled=true

# Enhanced cache settings for development mode
spring.cache.type=caffeine
spring.cache.cache-names=books,bookCovers,searchResults,bookRequests,searchRequests
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=240m

# Mock response fallback directory
app.mock.response.directory=src/test/resources/mock-responses

# Aggressive caching in dev mode to prevent unnecessary API calls
app.s3-cache.always-check-first=true
app.api-client.mock-when-possible=true

# Local disk caching for book data in development
app.local-cache.enabled=true
app.local-cache.directory=.dev-cache
app.local-cache.book-data.ttl-hours=168

# More aggressive S3 retry for development to avoid API calls
s3.retry.max-attempts=5
s3.retry.initial-backoff-ms=100
s3.retry.backoff-multiplier=1.5

# Request deduplication for in-flight Google Books API calls
app.api.deduplicate-requests=true
app.api.in-flight-request-timeout-seconds=30

# Dev-specific resilience4j circuit breaker settings
# More aggressive to prevent API calls during development
resilience4j.circuitbreaker.instances.googleBooksService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.googleBooksService.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.googleBooksService.failureRateThreshold=20
resilience4j.circuitbreaker.instances.googleBooksService.waitDurationInOpenState=60s
  
# ======================================================================
# Resilience4j Rate Limiter Configuration for GoogleBooksService (Development)
# ======================================================================
resilience4j.ratelimiter.instances.googleBooksServiceRateLimiter.limitRefreshPeriod=1m
resilience4j.ratelimiter.instances.googleBooksServiceRateLimiter.limitForPeriod=${google.books.api.request-limit-per-minute:5}
resilience4j.ratelimiter.instances.googleBooksServiceRateLimiter.timeoutDuration=0

# Cache warming configuration - reduced frequency for development
app.cache.warming.enabled=true
app.cache.warming.cron=0 */30 * * * ?
app.cache.warming.rate-limit-per-minute=3
app.cache.warming.max-books-per-run=5
app.cache.warming.recently-viewed-days=1

# Ensure NoDatabaseConfig is triggered for dev profile by overriding the datasource URL to be empty
spring.datasource.url=
