spring:
  main:
    allow-bean-definition-overriding: true
  profiles:
    default: prod # Default to prod if no other profile is active
  # Conditional datasource configuration
  # Set SPRING_DATASOURCE_URL to empty string to disable the database
  datasource:
    url: ${SPRING_DATASOURCE_URL:}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    # Only initialize if URL is provided
    initialization-mode: ${SPRING_DATASOURCE_INITIALIZATION_MODE:never}
    # Prevent application from failing if no database is available
    hikari:
      connection-timeout: 2000
      initialization-fail-timeout: -1 # Negative value means fail fast if DB is not available
      maximum-pool-size: 3 # Default for common, can be overridden by profiles
  
  # JPA configuration - only used when database URL is provided
  jpa:
    # Set explicit dialect to prevent auto-detection issues
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
    # Generate database schema only if datasource is available
    # Set to none to disable automatic schema generation
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
    # Only validate schema if explicitly enabled
    generate-ddl: ${SPRING_JPA_GENERATE_DDL:false}  
    show-sql: false
    # This property will prevent JPA from initializing before PostgreSQL is available
    open-in-view: false
  
  # Cache configuration - can be disabled with SPRING_CACHE_TYPE=none
  cache:
    type: ${SPRING_CACHE_TYPE:simple}
  
  # Redis configuration - optional, only used if cache type is redis
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    # Skip Redis if not available
    connect-timeout: 2000
    lettuce:
      shutdown-timeout: 0

  web:
    resources:
      chain:
        strategy:
          content:
            enabled: true
            paths: "/**"
      cache:
        cachecontrol:
          max-age: 365d # Cache versioned resources for 1 year
        # For unversioned resources, it can also set a shorter cache period
        # period: 7d 
        # use-cache-control-header: true # Ensure Cache-Control header is used

  codec: # Correctly nested under spring
    max-in-memory-size: 10MB # Configure global max buffer size for WebClient

app:
  cache:
    enabled: true
  
  # External embedding service URL (optional)
  # If not provided, a simple placeholder embedding will be used
  embedding:
    service:
      url: ${EMBEDDING_SERVICE_URL:}
      
# Server configuration (common, can be overridden by application.properties or profiles)
server:
  port: ${SERVER_PORT:8080} # Default from YML, application.properties will override if SERVER_PORT is set
  compression:
    enabled: true
  
# Common Logging (can be overridden by profiles)
logging:
  level:
    root: INFO # Default root level
    com.williamcallahan.book_recommendation_engine: INFO
    org.springframework.cache: WARN
    org.hibernate: WARN

---
spring:
  config:
    activate:
      on-profile: dev
  # Dev-specific properties
  datasource:
    url: "" # Explicitly empty
    driver-class-name: "" # Explicitly empty
    # hikari:
    #   maximum-pool-size: 1 # Default to 1 if absolutely needed, but aim for no init
    #   minimum-idle: 1      # Default to 1 if absolutely needed
  jpa:
    show-sql: true # Show SQL in dev
    hibernate:
      ddl-auto: none # More lenient ddl-auto for dev
    generate-ddl: false
    # database-platform: "" # Optionally, we could clear this too, but empty URL/driver should suffice
logging:
  level:
    com.williamcallahan.book_recommendation_engine: INFO # Changed from DEBUG
    org.springframework.web: INFO # Changed from DEBUG
    org.hibernate: WARN # Reduce Hibernate noise if no DB
app:
  environment:
    mode: development # Custom property for dev mode

---
spring:
  config:
    activate:
      on-profile: prod
  # Prod-specific properties
  datasource:
    url: "" # Explicitly empty
    driver-class-name: "" # Explicitly empty
    # hikari:
    #   maximum-pool-size: 1 # Default to 1 if absolutely needed
    #   minimum-idle: 1      # Default to 1 if absolutely needed
    # Consider more robust production settings for HikariCP
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none # Validate schema in prod, or 'none' if managed externally
    generate-ddl: false
logging:
  level:
    com.williamcallahan.book_recommendation_engine: INFO # Standard INFO level for prod
app:
  environment:
    mode: production # Custom property for prod mode
