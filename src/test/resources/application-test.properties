# Test Profile: Application Properties
# Overrides and extends application.properties and application.yml (test profile section if one existed)
# These properties are active when the 'test' Spring profile is used (e.g., during `mvn test`)
# Configures H2 in-memory database and test-specific logging

# H2 Datasource Configuration for Test Profile
# Overrides spring.datasource.url from application.properties and application.yml
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Database Schema Initialization for H2:
# - `ddl-auto=none`: Disables Hibernate's automatic schema generation (create, update, create-drop)
#   Crucial because Hibernate might generate DDL incompatible with H2 for custom types (like 'vector')
# - `sql.init.mode=always`: Ensures Spring Boot always executes `src/test/resources/schema.sql` (and `data.sql` if present)
#   to set up the H2 database schema This file contains H2-compatible DDL
# - `defer-datasource-initialization=true`: Ensures `schema.sql` runs before Hibernate validation
#   or schema use, providing a well-defined schema for Hibernate

spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# Logging configuration for tests - minimize verbosity
# Overrides defaults from application.yml and application.properties
logging.level.root=WARN
logging.level.com.williamcallahan=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.org.springframework.test=WARN

# Optional: Show SQL executed by Hibernate (can be verbose if uncommented)
# spring.jpa.show-sql=true

# Conditional Bean Configuration Notes (for reference):
# Application uses `@ConditionalOnExpression` for JpaCachedBookRepository and NoOpCachedBookRepository
# to switch between real DB repository and no-op version based on `spring.datasource.url`
# In this test profile, `spring.datasource.url` IS set (for H2), so JpaCachedBookRepository should be active,
# but its interaction with DB is governed by schema.sql and mocked in some tests

# Ensure NoOpCachedBookRepository is NOT active when datasource URL is present (H2 here)
# `@ConditionalOnExpression` on JpaCachedBookRepository ('${spring.datasource.url:}'.length() > 0)
# and NoOpCachedBookRepository ('${spring.datasource.url:}'.length() == 0) should handle this

# If custom schema.sql or data.sql for tests in src/test/resources exist,
# Spring Boot should pick them up automatically for H2

# Required by BookCoverManagementService: provide CDN URL for S3 cover images in test profile
s3.cdn-url=https://book-finder.sfo3.digitaloceanspaces.com